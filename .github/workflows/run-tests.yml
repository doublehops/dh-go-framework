name: run-tests

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: dev

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: pass12
          MYSQL_DATABASE: dhapi_test
          MYSQL_USER: dev
          MYSQL_PASSWORD: pass12
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 5
          done

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build application Docker image
        run: docker build -t api-test-image -f Dockerfile_test .

      - name: Run application container
        run: |
          docker run -d --name app-container -p 8088:8088 api-test-image

      - name: Debug environment variables
        run: printenv | sort

      - name: Run database migrations
        run: go run cmd/migrate/migrate.go -action up -config config_test.json
        env:
          DB_HOST: db
          DB_USER: dev
          DB_PASSWORD: pass12
          DB_NAME: dhapi_test

      - name: Check running containers
        run: docker ps
      - name: Wait for application to be ready
        run: |
          echo "Waiting for application to be ready..."
          for i in {1..60}; do
            if curl --silent --fail http://localhost:8088/v1/health; then
              echo "Application is ready!"
              break
            fi
            echo "Waiting for application... ($i/60)"
            sleep 5
          done

      - name: Get application container logs
        run: docker logs app-container

      - name: Run Go tests
        run: go test ./...
        env:
          DB_HOST: db
          DB_USER: dev
          DB_PASSWORD: pass12
          DB_NAME: dhapi_test

      - name: Stop Docker containers
        run: docker stop $(docker ps -q)
