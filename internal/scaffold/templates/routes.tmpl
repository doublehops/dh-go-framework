	If there are no errors, the scaffolding is complete. You will need to add the manual changes
	below to make the endpoints available.

	// Add the following import to head of ./internal/routes/routes.go

	------------------------------------------------------

	"{{.Module}}/internal/handlers/{{.LowerCase}}"

	------------------------------------------------------

	// Add the following group of routes to ./internal/routes/routes.go

	------------------------------------------------------

	{{.CamelCase}}Handle := {{.LowerCase}}.New(app)

	{{.CamelCase}}Group := group.New("/{{.KebabCase}}")
	{{.CamelCase}}Group.GET({{.CamelCase}}Handle.GetAll).Middleware(middleware.AuthMiddleware)
	{{.CamelCase}}Group.Children(
		group.New("/:id").GET({{.CamelCase}}Handle.GetByID),
		group.New("").POST({{.CamelCase}}Handle.Create),
		group.New("/:id").PUT({{.CamelCase}}Handle.UpdateByID),
		group.New("/:id").DELETE({{.CamelCase}}Handle.DeleteByID),
	)

	And then add include the new route group into the existing `group.New` route list.

	------------------------------------------------------

	g = group.New("/v1").Children(
		{{.CamelCase}}Group, // new line here.
	)

	------------------------------------------------------

	You should now be able to run the cURL queries to test it. You may want to remove the authorization checks in the handlers or
	you may receive an authorization 403 error.

	- Create record: curl -X POST http://localhost:8088/v1/{{.KebabCase}} --data '{"key: "value"}'
	- List records: curl -X GET http://localhost:8088/v1/{{.KebabCase}}
	- Get record: curl -X GET http://localhost:8088/v1/{{.KebabCase}}/1
	- Update record: curl -X PUT http://localhost:8088/v1/{{.KebabCase}}/1 --data '{"key: "value"}'
	- Delete record: curl -X DELETE http://localhost:8088/v1/{{.KebabCase}}/1'
